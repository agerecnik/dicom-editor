<UserControl x:Class="DicomEditor.View.EditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:DicomEditor.ViewModel"
             xmlns:tree="clr-namespace:DicomEditor.Model.EditorModel.Tree"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModel:EditorViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="450" d:DesignWidth="800"
             Background="#272537">

    <UserControl.Resources>

        <DataTemplate x:Key="tagCell">
            <StackPanel Orientation="Horizontal">
                <tree:RowExpander/>
                <TextBlock Text="{Binding Tag}" Foreground="DarkGray"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="nameCell">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name}" Foreground="DarkGray"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="valueRepresentationCell">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding ValueRepresentation}" Foreground="DarkGray"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="valueCell">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Value}" Foreground="DarkGray"/>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type tree:TreeListItem}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                                     Value="True">
                    <Setter Property="Background"
                                        Value="#FFC5CBF9"/>
                    <Setter Property="Foreground"
                                        Value="Black"/>
                </Trigger>
                <Trigger Property="IsSelected"
                                     Value="True">
                    <Setter Property="Background"
                                        Value="#FFC5CBF9"/>
                    <Setter Property="Foreground"
                                        Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="20"
                              Height="20"
                              Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="Collapsed">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="Expanded">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Collapsed"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                <Path.Fill>
                                    <SolidColorBrush Color="DarkGray" />
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Expanded"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="1,1,1,1"
                                  Data="M 0 4 L 8 4 L 4 8 Z"
                                  Visibility="Hidden">
                                <Path.Fill>
                                    <SolidColorBrush Color="DarkGray" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <tree:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
        <tree:CanExpandConverter x:Key="CanExpandConverter"/>

        <Style TargetType="{x:Type tree:RowExpander}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type tree:RowExpander}">
                        <ToggleButton x:Name="Expander" 
									  Style="{StaticResource ExpandCollapseToggleStyle}" 
									  Margin="{Binding Node.Level, Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  IsChecked="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  Visibility="{Binding Node.IsExpandable, Converter={StaticResource CanExpandConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeListItem}}}"
									  ClickMode="Press"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2.5*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="0.2*" />
            </Grid.RowDefinitions>

            <ListView Grid.Row="0"
                      Margin="10,10,5,5"
                      Background="#353340"
                      BorderBrush="#353340"
                      IsSynchronizedWithCurrentItem="True"
                      x:Name="LoadedSeriesListView"
                      ItemsSource="{Binding LoadedSeriesList}"
                      SelectedItem="{Binding SelectedSeries}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding SeriesDescription}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>

            <ListView Grid.Row="1"
                      Margin="10,5,5,10"
                      Background="#353340"
                      BorderBrush="#353340"
                      IsSynchronizedWithCurrentItem="True"
                      x:Name="SelectedSeriesView"
                      ItemsSource="{Binding ElementName=LoadedSeriesListView, Path=SelectedItem.Instances}"
                      SelectedItem="{Binding SelectedInstance}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Label Content="{Binding InstanceUID}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>

            <Button Grid.Row="2"
                    Height="30"
                    Margin="10,0,0,10"
                    Content="Store selected series"
                    Command="{Binding StoreCommand}">

            </Button>
            
        </Grid>

        <tree:TreeList x:Name="_tree"
                       Grid.Column="1"
                       Model="{Binding SelectedInstanceAttributes, Mode=TwoWay}"
                       Background="#353340"
                       BorderBrush="#353340"
                       Margin="5,10,10,10">
            <tree:TreeList.View>
                <GridView>
                    <GridView.Columns>

                        <GridViewColumn Header="Tag" Width="200" CellTemplate="{StaticResource tagCell}"/>
                        <GridViewColumn Header="Name" Width="200" CellTemplate="{StaticResource nameCell}"/>
                        <GridViewColumn Header="Value Representation" Width="200" CellTemplate="{StaticResource valueRepresentationCell}"/>
                        <GridViewColumn Header="Value" Width="200" CellTemplate="{StaticResource valueCell}"/>

                    </GridView.Columns>
                </GridView>
            </tree:TreeList.View>
        </tree:TreeList>

    </Grid>
</UserControl>
